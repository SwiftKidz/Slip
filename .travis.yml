branches:
  only:
    - master
    - develop
language: objective-c
osx_image: xcode8
cache:
  - cocoapods
env:
  global:
    - PROJECT=Slip.xcodeproj
    - PODSPEC=Slip.podspec
    - IOS_FRAMEWORK_SCHEME="Slip-iOS"
    - OSX_FRAMEWORK_SCHEME="Slip-macOS"
    - TVOS_FRAMEWORK_SCHEME="Slip-tvOS"
  matrix:
    - TEST_TYPE=iOS
    - TEST_TYPE=macOS
    - TEST_TYPE=tvOS
    - TEST_TYPE=Lint
    - TEST_TYPE=Distribution
before_install:
- |
  if [ "$TEST_TYPE" = Lint ] || [ "$TEST_TYPE" = Distribution ]; then
    brew update
  fi
install:
- |
  if [ "$TEST_TYPE" = iOS ] || [ "$TEST_TYPE" = macOS ] || [ "$TEST_TYPE" = tvOS ]; then
    gem install xcpretty -N --no-ri --no-rdoc
  elif [ "$TEST_TYPE" = Lint ]; then
    brew install swiftlint || brew upgrade swiftlint
  elif [ "$TEST_TYPE" = Distribution ]; then
    gem install cocoapods --pre --quiet --no-ri --no-rdoc
    brew install carthage || brew upgrade carthage
  fi 
script:
- |
    if [ "$TEST_TYPE" = iOS ]; then
      set -o pipefail
      xcodebuild test -project "$PROJECT" -sdk iphonesimulator -scheme "$IOS_FRAMEWORK_SCHEME"  -configuration Debug -destination "platform=iOS Simulator,name=iPhone 4s" -destination "platform=iOS Simulator,name=iPhone 6 Plus" GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
    elif [ "$TEST_TYPE" = macOS ]; then
      set -o pipefail
      xcodebuild test -project "$PROJECT" -sdk macosx -scheme "$OSX_FRAMEWORK_SCHEME" -configuration Debug GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
    elif [ "$TEST_TYPE" = tvOS ]; then
      set -o pipefail
      xcodebuild test -project "$PROJECT" -sdk appletvsimulator -scheme "$TVOS_FRAMEWORK_SCHEME" -destination "platform=tvOS Simulator,name=Apple TV 1080p" -configuration Debug GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
    elif [ "$TEST_TYPE" = Lint ]; then
      swiftlint lint
    elif [ "$TEST_TYPE" = Distribution ]; then
      pod lib lint "$PODSPEC"
    fi
after_success:
- |
    if [ "$TEST_TYPE" = iOS ] || [ "$TEST_TYPE" = macOS ] || [ "$TEST_TYPE" = tvOS ]; then
      bash <(curl -s https://codecov.io/bash)
    fi  
